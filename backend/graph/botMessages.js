/**
 * Mensagens do Bot - Constantes reutiliz√°veis
 * Todas as mensagens do chatbot centralizadas para f√°cil manuten√ß√£o
 */

// ============================================
// MENSAGENS DO MENU PRINCIPAL
// ============================================
const WELCOME_MESSAGE = `
üéÆ **Bem-vindo ao Pok√©Dex Assistant!**

Ol√°, Treinador! Eu sou seu assistente pessoal do mundo Pok√©mon. 

Posso te ajudar a:
1Ô∏è‚É£ Buscar informa√ß√µes de qualquer Pok√©mon
2Ô∏è‚É£ Comparar dois Pok√©mon lado a lado
3Ô∏è‚É£ Ver cadeias de evolu√ß√£o
4Ô∏è‚É£ Buscar Pok√©mon por tipo

Digite o **n√∫mero da op√ß√£o** ou me diga o que voc√™ quer fazer!`;

const MENU_SEARCH_OPTION = 'üîç **Buscar Pok√©mon**\n\nDigite o nome ou n√∫mero do Pok√©mon que voc√™ quer conhecer!\nExemplo: "Pikachu" ou "25"';

const MENU_COMPARE_OPTION = '‚öñÔ∏è **Comparar Pok√©mon**\n\nDigite o nome ou n√∫mero de dois Pok√©mon separados por v√≠rgula.\nExemplo: "Charizard, Blastoise" ou "6, 9"';

const MENU_EVOLUTION_OPTION = 'üîÑ **Cadeia de Evolu√ß√£o**\n\nDigite o nome ou n√∫mero do Pok√©mon para ver sua linha evolutiva completa!';

const MENU_TYPE_OPTION = 'üè∑Ô∏è **Buscar por Tipo**\n\nDigite o tipo de Pok√©mon que procura:\n(fire, water, grass, electric, psychic, dragon, etc.)';

const MENU_EXIT_MESSAGE = 'üëã At√© logo, Treinador! Foi √≥timo te ajudar na sua jornada Pok√©mon!';

const MENU_INVALID_CHOICE = `
‚ùå Desculpe, n√£o entendi sua escolha.

Por favor, escolha uma das op√ß√µes:
1Ô∏è‚É£ Buscar Pok√©mon
2Ô∏è‚É£ Comparar Pok√©mon
3Ô∏è‚É£ Ver Evolu√ß√£o
4Ô∏è‚É£ Buscar por Tipo

Ou digite "sair" para encerrar.`;

// ============================================
// MENSAGENS DE NAVEGA√á√ÉO
// ============================================
const BACK_TO_MENU = 'üìã Voltando ao menu principal...';

const GOING_TO_EVOLUTION = 'üîÑ Indo para visualiza√ß√£o de evolu√ß√£o...';

const VOLTAR_SUCCESS = '‚¨ÖÔ∏è Voltando √† etapa anterior...';

const VOLTAR_AT_START = '‚ÑπÔ∏è Voc√™ j√° est√° no in√≠cio da conversa.';

// ============================================
// MENSAGENS DE BUSCA DE POK√âMON
// ============================================
const createPokemonInfoMessage = (pokemon, species) => `
‚ú® **${pokemon.nameCapitalized}** #${pokemon.id}

üìù ${species.description}

üè∑Ô∏è **Tipo(s):** ${pokemon.types.map(t => t.toUpperCase()).join(', ')}
üìè **Altura:** ${pokemon.height}m
‚öñÔ∏è **Peso:** ${pokemon.weight}kg

üìä **Estat√≠sticas:**
‚ù§Ô∏è  HP: ${pokemon.stats.hp}
‚öîÔ∏è  Ataque: ${pokemon.stats.attack}
üõ°Ô∏è  Defesa: ${pokemon.stats.defense}
‚ú® Atq. Especial: ${pokemon.stats.specialAttack}
üåü Def. Especial: ${pokemon.stats.specialDefense}
‚ö° Velocidade: ${pokemon.stats.speed}
üí™ **Total: ${pokemon.stats.total}**

üí´ **Habilidades:**
${pokemon.abilities.map(a => `‚Ä¢ ${a.name}${a.isHidden ? ' (oculta)' : ''}`).join('\n')}

${species.isLegendary ? 'üëë **Pok√©mon Lend√°rio!**' : ''}
${species.isMythical ? '‚ú® **Pok√©mon M√≠tico!**' : ''}

---
O que voc√™ quer fazer agora?
‚Ä¢ Digite outro Pok√©mon para buscar
‚Ä¢ Digite "evoluir" para ver a cadeia evolutiva
‚Ä¢ Digite "menu" para voltar ao menu principal`;

const createPokemonNotFoundWithSuggestions = (input, suggestions) => `
‚ùå Pok√©mon "${input}" n√£o encontrado.

ü§î Voc√™ quis dizer:
${suggestions.map(s => `‚Ä¢ ${s}`).join('\n')}

Tente novamente ou digite "menu" para voltar.`;

const createPokemonNotFound = (input) => 
  `‚ùå Pok√©mon "${input}" n√£o encontrado.\n\nTente outro nome ou n√∫mero, ou digite "menu" para voltar.`;

const createGenericError = (errorMessage) => 
  `‚ùå Erro ao buscar Pok√©mon: ${errorMessage}\n\nTente novamente ou digite "menu" para voltar.`;

// ============================================
// MENSAGENS DE COMPARA√á√ÉO
// ============================================
const createCompareInstructionError = () => 
  'Por favor, forne√ßa dois Pok√©mon separados por v√≠rgula.\nExemplo: "Pikachu, Raichu"';

const createComparisonMessage = (pokemon1, pokemon2) => {
  const winner = pokemon1.stats.total > pokemon2.stats.total 
    ? `üèÜ ${pokemon1.nameCapitalized} tem stats totais superiores!` 
    : pokemon1.stats.total < pokemon2.stats.total 
      ? `üèÜ ${pokemon2.nameCapitalized} tem stats totais superiores!`
      : `‚öñÔ∏è Ambos t√™m stats totais iguais!`;

  return `
‚öñÔ∏è **Compara√ß√£o: ${pokemon1.nameCapitalized} vs ${pokemon2.nameCapitalized}**

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë **Estat√≠stica**    ‚ïë **${pokemon1.nameCapitalized}** ‚ïë **${pokemon2.nameCapitalized}** ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë HP             ‚ïë ${String(pokemon1.stats.hp).padEnd(8)} ‚ïë ${String(pokemon2.stats.hp).padEnd(8)} ‚ïë
‚ïë Ataque         ‚ïë ${String(pokemon1.stats.attack).padEnd(8)} ‚ïë ${String(pokemon2.stats.attack).padEnd(8)} ‚ïë
‚ïë Defesa         ‚ïë ${String(pokemon1.stats.defense).padEnd(8)} ‚ïë ${String(pokemon2.stats.defense).padEnd(8)} ‚ïë
‚ïë Atq. Especial  ‚ïë ${String(pokemon1.stats.specialAttack).padEnd(8)} ‚ïë ${String(pokemon2.stats.specialAttack).padEnd(8)} ‚ïë
‚ïë Def. Especial  ‚ïë ${String(pokemon1.stats.specialDefense).padEnd(8)} ‚ïë ${String(pokemon2.stats.specialDefense).padEnd(8)} ‚ïë
‚ïë Velocidade     ‚ïë ${String(pokemon1.stats.speed).padEnd(8)} ‚ïë ${String(pokemon2.stats.speed).padEnd(8)} ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë **TOTAL**          ‚ïë **${String(pokemon1.stats.total).padEnd(8)}** ‚ïë **${String(pokemon2.stats.total).padEnd(8)}** ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üè∑Ô∏è **Tipos:**
‚Ä¢ ${pokemon1.nameCapitalized}: ${pokemon1.types.join(', ')}
‚Ä¢ ${pokemon2.nameCapitalized}: ${pokemon2.types.join(', ')}

${winner}

---
Digite "menu" para voltar ou compare outros Pok√©mon!`;
};

const createCompareError = (errorMessage) => 
  `‚ùå ${errorMessage}\n\nTente novamente ou digite "menu" para voltar.`;

// ============================================
// MENSAGENS DE EVOLU√á√ÉO
// ============================================
const createEvolutionMessage = (pokemon, evolutionChain) => `
üîÑ **Cadeia Evolutiva de ${pokemon.nameCapitalized}**

${evolutionChain.map((evo, index) => {
  const arrow = index < evolutionChain.length - 1 ? ' ‚û°Ô∏è ' : '';
  return `**${evo.nameCapitalized}**${arrow}`;
}).join('')}

üìä Total de formas: ${evolutionChain.length}

---
Digite outro Pok√©mon ou "menu" para voltar.`;

const createEvolutionError = (errorMessage) => 
  `‚ùå Erro ao buscar evolu√ß√£o: ${errorMessage}\n\nTente novamente ou digite "menu" para voltar.`;

// ============================================
// MENSAGENS DE BUSCA POR TIPO
// ============================================
const createTypeSearchMessage = (type, pokemonList) => `
üè∑Ô∏è **Pok√©mon do tipo ${type.toUpperCase()}**

${pokemonList.slice(0, 15).map((p, i) => `${i + 1}. ${p.name}`).join('\n')}

${pokemonList.length > 15 ? `\n... e mais ${pokemonList.length - 15} Pok√©mon!` : ''}

---
Digite o nome de um Pok√©mon para mais detalhes ou "menu" para voltar.`;

const TYPE_SEARCH_INVALID = (input) => `
‚ùå Tipo "${input}" n√£o encontrado.

Tipos v√°lidos incluem:
‚Ä¢ normal, fire, water, grass, electric
‚Ä¢ ice, fighting, poison, ground, flying
‚Ä¢ psychic, bug, rock, ghost, dragon
‚Ä¢ dark, steel, fairy

Tente novamente ou digite "menu" para voltar.`;

// ============================================
// MENSAGENS DE FINALIZA√á√ÉO
// ============================================
const createEndMessage = (interactionCount, minutes, seconds) => `
üëã **At√© logo, Treinador!**

üìä **Resumo da sess√£o:**
‚Ä¢ Intera√ß√µes: ${interactionCount}
‚Ä¢ Dura√ß√£o: ${minutes}m ${seconds}s

Obrigado por usar o Pok√©Dex Assistant! 
Volte sempre que precisar de ajuda na sua jornada Pok√©mon! üéÆ‚ú®`;

// ============================================
// EXPORTS
// ============================================
module.exports = {
  // Menu
  WELCOME_MESSAGE,
  MENU_SEARCH_OPTION,
  MENU_COMPARE_OPTION,
  MENU_EVOLUTION_OPTION,
  MENU_TYPE_OPTION,
  MENU_EXIT_MESSAGE,
  MENU_INVALID_CHOICE,
  
  // Navega√ß√£o
  BACK_TO_MENU,
  GOING_TO_EVOLUTION,
  VOLTAR_SUCCESS,
  VOLTAR_AT_START,
  
  // Busca
  createPokemonInfoMessage,
  createPokemonNotFoundWithSuggestions,
  createPokemonNotFound,
  createGenericError,
  
  // Compara√ß√£o
  createCompareInstructionError,
  createComparisonMessage,
  createCompareError,
  
  // Evolu√ß√£o
  createEvolutionMessage,
  createEvolutionError,
  
  // Tipo
  createTypeSearchMessage,
  TYPE_SEARCH_INVALID,
  
  // Finaliza√ß√£o
  createEndMessage
};

